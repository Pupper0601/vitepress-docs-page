import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.1b72a0e7.js";const D=JSON.parse('{"title":"一、Python 知识点回顾","description":"","frontmatter":{},"headers":[],"relativePath":"软件测试/05.测试工具开发/01.Python知识回顾.md","lastUpdated":1705907257000}'),p={name:"软件测试/05.测试工具开发/01.Python知识回顾.md"},e=l(`<h1 id="一、python-知识点回顾" tabindex="-1">一、Python 知识点回顾 <a class="header-anchor" href="#一、python-知识点回顾" aria-label="Permalink to &quot;一、Python 知识点回顾&quot;">​</a></h1><h2 id="数据类型" tabindex="-1">数据类型 <a class="header-anchor" href="#数据类型" aria-label="Permalink to &quot;数据类型&quot;">​</a></h2><h3 id="_1-字符串" tabindex="-1">1.字符串 <a class="header-anchor" href="#_1-字符串" aria-label="Permalink to &quot;1.字符串&quot;">​</a></h3><ul><li><p>定义：<code>‘’，”“，‘’‘’‘’</code></p></li><li><p>json：</p><ul><li><p><code>json.loads()</code>：json 字符串 ---&gt; 字典</p></li><li><p><code>json.dumps()</code>：字典 ---&gt; json</p></li></ul></li></ul><h3 id="_2-列表与元组" tabindex="-1">2.列表与元组 <a class="header-anchor" href="#_2-列表与元组" aria-label="Permalink to &quot;2.列表与元组&quot;">​</a></h3><ul><li><p>元组 ---&gt; 数据不允许修改</p></li><li><p>列表 ---&gt; 数据可以更改</p></li></ul><h3 id="_3-字典" tabindex="-1">3.字典 <a class="header-anchor" href="#_3-字典" aria-label="Permalink to &quot;3.字典&quot;">​</a></h3><ul><li><p>定义：<code>{‘键’：值}</code></p></li><li><p>键是唯一的，值可以不唯一</p></li></ul><h3 id="_4-集合-set" tabindex="-1">4.集合（set） <a class="header-anchor" href="#_4-集合-set" aria-label="Permalink to &quot;4.集合（set）&quot;">​</a></h3><ul><li><p>定义：一个无序的不重复的元素序列</p></li><li><p>可以使用大括号{}或者 set()函数创建集合 创建空集合必须使用<code>set()</code>而不是{}</p></li><li><p>去重：</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">list1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">set</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">list1</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;">  	</span><span style="color:#676E95;font-style:italic;"># {1, 2, 3}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>交集：</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">set1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">set2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">set1 </span><span style="color:#89DDFF;">&amp;</span><span style="color:#82AAFF;"> set2</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;"># {4}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>并集：</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">set1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">set2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">set1 </span><span style="color:#89DDFF;">|</span><span style="color:#82AAFF;"> set2</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;"># {1, 2, 3, 4, 5, 6, 7}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ul><h2 id="函数与对象方法" tabindex="-1">函数与对象方法 <a class="header-anchor" href="#函数与对象方法" aria-label="Permalink to &quot;函数与对象方法&quot;">​</a></h2><p>1.函数多种形参类型---通用性</p><ul><li><p>必填、缺省、可变 args、关键字 kwargs</p><p>2.函数返回值</p></li><li><p>return</p><p>3.装饰器</p></li><li><p>函数高级用法</p></li></ul><h2 id="面向对象技术" tabindex="-1">面向对象技术 <a class="header-anchor" href="#面向对象技术" aria-label="Permalink to &quot;面向对象技术&quot;">​</a></h2><h3 id="_1-类的定义" tabindex="-1">1.类的定义 <a class="header-anchor" href="#_1-类的定义" aria-label="Permalink to &quot;1.类的定义&quot;">​</a></h3><h3 id="_2-实例方法、静态方法、类方法" tabindex="-1">2.实例方法、静态方法、类方法 <a class="header-anchor" href="#_2-实例方法、静态方法、类方法" aria-label="Permalink to &quot;2.实例方法、静态方法、类方法&quot;">​</a></h3><h3 id="_3-继承" tabindex="-1">3.继承 <a class="header-anchor" href="#_3-继承" aria-label="Permalink to &quot;3.继承&quot;">​</a></h3><h3 id="_4-多态" tabindex="-1">4.多态 <a class="header-anchor" href="#_4-多态" aria-label="Permalink to &quot;4.多态&quot;">​</a></h3><h2 id="知识点汇总" tabindex="-1">知识点汇总 <a class="header-anchor" href="#知识点汇总" aria-label="Permalink to &quot;知识点汇总&quot;">​</a></h2><p><img src="https://img.pupper.cn/img/image-20220721171801106.png" alt="image-20220721171801106"></p><p><img src="https://img.pupper.cn/img/image-20220721171927101.png" alt="image-20220721171927101"></p><p><img src="https://img.pupper.cn/img/image-20220721172022431.png" alt="image-20220721172022431"></p><p><img src="https://img.pupper.cn/img/image-20220721172055418.png" alt="image-20220721172055418"></p>`,23),o=[e];function t(r,c,i,F,y,h){return a(),n("div",null,o)}const u=s(p,[["render",t]]);export{D as __pageData,u as default};
