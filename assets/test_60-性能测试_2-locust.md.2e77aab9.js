import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.1b72a0e7.js";const A=JSON.parse('{"title":"二、locust","description":"","frontmatter":{},"headers":[],"relativePath":"test/60-性能测试/2-locust.md","lastUpdated":1699924178000}'),p={name:"test/60-性能测试/2-locust.md"},e=l(`<h1 id="二、locust" tabindex="-1">二、locust <a class="header-anchor" href="#二、locust" aria-label="Permalink to &quot;二、locust&quot;">​</a></h1><h2 id="一、-安装-locust" tabindex="-1">一、 安装 locust <a class="header-anchor" href="#一、-安装-locust" aria-label="Permalink to &quot;一、 安装 locust&quot;">​</a></h2><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pip</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">locust</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="验证是否安装成功" tabindex="-1">验证是否安装成功 <a class="header-anchor" href="#验证是否安装成功" aria-label="Permalink to &quot;验证是否安装成功&quot;">​</a></h4><div class="language-powershell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">import locust</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_1-httpuser-user" tabindex="-1">1. HttpUser(User) <a class="header-anchor" href="#_1-httpuser-user" aria-label="Permalink to &quot;1. HttpUser(User)&quot;">​</a></h3><p>在 User 类中，具有一个<code>client</code>属性，它对应着虚拟用户作为客户端所具备的请求能力。</p><ul><li>继承 <code>HttpUser</code> 类。HttpUser 是最常用的用户类。它添加了一个<code>client</code>属性，用于发出 HTTP 请求。 <ul><li>其 client 属性绑定了<code>HttpSession</code>类，而 HttpSession 又继承自<code>requests.Session</code>。</li><li>通过 client 属性来使用<code>Python requests</code>库的所有方法，调用方式也与 requests 完全一致。</li><li>client 的方法调用之间就自动具有了<code>状态记忆</code>的功能, 从而后续 HTTP 请求操作都能带上登录态。</li></ul></li></ul><p>虽然 Locust 仅内置了对 HTTP/HTTPS 的支持，但它可以扩展到测试几乎任何系统。只需要基于 User 类实现 client 即可。 我们可以使用 <a href="https://github.com/SvenskaSpel/locust-plugins/" target="_blank" rel="noreferrer">locust-plugins</a> ，这个是第三方维护的库，支持 Kafka、mqtt，webdriver 等测试。</p><h3 id="_2-taskset" tabindex="-1">2. TaskSet <a class="header-anchor" href="#_2-taskset" aria-label="Permalink to &quot;2. TaskSet&quot;">​</a></h3><p>在 <code>TaskSet</code> 子类描述业务测试场景，对所有行为（任务）进行组织和描述，并可以对不同任务的权重进行配置</p><h4 id="采用-task-装饰器" tabindex="-1">采用 <code>@task</code> 装饰器 <a class="header-anchor" href="#采用-task-装饰器" aria-label="Permalink to &quot;采用 \`@task\` 装饰器&quot;">​</a></h4><div class="language-Python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> locust </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> TaskSet</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> task</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyTaskSet</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">TaskSet</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">on_start</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">task is running</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">on_stop</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">task is stopped</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">task</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">task1</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&#39;task1: </span><span style="color:#F78C6C;">{</span><span style="color:#A6ACCD;">self</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">task</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">task2</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&#39;task2: </span><span style="color:#F78C6C;">{</span><span style="color:#A6ACCD;">self</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h4 id="采用-tasks-属性" tabindex="-1">采用 tasks 属性 <a class="header-anchor" href="#采用-tasks-属性" aria-label="Permalink to &quot;采用 tasks 属性&quot;">​</a></h4><p>可以使用 list，也可以使用 dict(使用字典时, 键为任务, 值为权重).</p><p><code>on_start()</code>与<code>on_stop()</code>方法，分别重写父类的<code>TaskSet</code>的<code>on_start()</code>与<code>on_stop()</code>。分别在用户开始和停止执行此任务集时触发。</p><div class="language-Python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> locust </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> TaskSet</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> task</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyTaskSet</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">TaskSet</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">on_start</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">task is running</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">on_stop</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">task is stopped</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">task1</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&#39;task1: </span><span style="color:#F78C6C;">{</span><span style="color:#A6ACCD;">self</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">task2</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&#39;task2: </span><span style="color:#F78C6C;">{</span><span style="color:#A6ACCD;">self</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># tasks = [task1, task2]</span></span>
<span class="line"><span style="color:#A6ACCD;">    tasks </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">task1</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> task2</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="_3-实际案例" tabindex="-1">3. 实际案例 <a class="header-anchor" href="#_3-实际案例" aria-label="Permalink to &quot;3. 实际案例&quot;">​</a></h3><div class="language-Python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> locust </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> TaskSet</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> task</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> HttpUser</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> run_single_user</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> locust</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">clients </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> ResponseContextManager</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> locust</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">runners </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> logger</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">BaiduTask</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">TaskSet</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">on_start</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">on_stop</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">goodbye</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">task</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">search_by_baidu</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        wd </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> random</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">choice</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">user</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">share_data</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        path </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&#39;/s?wd=</span><span style="color:#F78C6C;">{</span><span style="color:#A6ACCD;">wd</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">path</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">catch_response</span><span style="color:#89DDFF;">=True)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> res</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            res</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> ResponseContextManager</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> res</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">status_code</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">failure</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">res</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">text</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Baidu</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">HttpUser</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    host </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://www.baidu.com</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    tasks </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">BaiduTask</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    share_data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">波小艺</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">boxiaoyi</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">性能测试</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">locust</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> __name__ </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">__main__</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">run_single_user</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">Baidu</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h2 id="二、-关键字说明" tabindex="-1">二、 关键字说明 <a class="header-anchor" href="#二、-关键字说明" aria-label="Permalink to &quot;二、 关键字说明&quot;">​</a></h2><h3 id="_1-wait-time-每个用户执行后的等待时间" tabindex="-1">1. wait_time:每个用户执行后的等待时间 <a class="header-anchor" href="#_1-wait-time-每个用户执行后的等待时间" aria-label="Permalink to &quot;1. wait_time:每个用户执行后的等待时间&quot;">​</a></h3><p>如果没有指定 wait_time ，则下个任务将立即执行</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 随机等待 1~5 秒</span></span>
<span class="line"><span style="color:#A6ACCD;">wait_time </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">between</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_2-weight-和-fixed-count-属性" tabindex="-1">2. weight 和 fixed_count 属性 <a class="header-anchor" href="#_2-weight-和-fixed-count-属性" aria-label="Permalink to &quot;2. weight 和 fixed_count 属性&quot;">​</a></h3><p>多个用户类时，使用 <code>weight</code> 来确认 产生的用户比例</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">WebUser</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    weight </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MobileUser</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    weight </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>使用 <code>fixed_count</code> 来确认用户类产生的个数，与总数无关</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AdminUser</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    wait_time </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">constant</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">600</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    fixed_count </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">task</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">restart_app</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">WebUser</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">):</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_3-on-start-和-on-stop-方法" tabindex="-1">3. on_start 和 on_stop 方法 <a class="header-anchor" href="#_3-on-start-和-on-stop-方法" aria-label="Permalink to &quot;3. on_start 和 on_stop 方法&quot;">​</a></h3><p><strong>on_start</strong> : 开始运行前调用（相当于 前置）</p><p><strong>on_stop</strong> ：结束运行时调用（相当于 后置）</p><h3 id="_4-task-装饰器" tabindex="-1">4. @task 装饰器 <a class="header-anchor" href="#_4-task-装饰器" aria-label="Permalink to &quot;4. @task 装饰器&quot;">​</a></h3><ul><li>为用户添加任务的最简单方法</li><li>接受一个可选的权重参数，可用于指定任务的执行率</li></ul><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> locust </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> User</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> task</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> between</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyUser</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    wait_time </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">between</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">15</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">task</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">task1</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">pass</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">task</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">task2</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">pass</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="_5-tasks-任务属性" tabindex="-1">5. tasks 任务属性 <a class="header-anchor" href="#_5-tasks-任务属性" aria-label="Permalink to &quot;5. tasks 任务属性&quot;">​</a></h3><p><code>tasks</code> 可以是 列表 或 字典</p><ul><li><p>列表： 元素为普通函数，执行时随机选择</p><ul><li>例如：<code>tasks = [my_task, my_task1, my_task2]</code></li></ul></li><li><p>字典： 可调用的对象作为键， 整数作为值，值为执行比率，执行时随机选择</p><ul><li>例如： <code>{my_task: 3, another_task: 1}</code></li><li>my_task 被执行的可能性是 another_task 的 3 倍。</li></ul></li></ul><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> locust </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> User</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> constant</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">my_task</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">user</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">pass</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyUser</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    tasks </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">my_task</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    wait_time </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">constant</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_6-tag-装饰器" tabindex="-1">6. @tag 装饰器 <a class="header-anchor" href="#_6-tag-装饰器" aria-label="Permalink to &quot;6. @tag 装饰器&quot;">​</a></h3><p>使用 <a href="http://docs.locust.io/en/stable/api.html#locust.tag" target="_blank" rel="noreferrer">@tag</a> 装饰器标记任务</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> locust </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> User</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> constant</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> task</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> tag</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyUser</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    wait_time </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">constant</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">tag</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tag1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">task</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">task1</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">pass</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">tag</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tag1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tag2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">task</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">task2</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">pass</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">tag</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tag3</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">task</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">task3</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">pass</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">task</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">task4</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">pass</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><ul><li><p>--tags : 需要执行的任务</p><ul><li><code>--tags tag2 tag3</code></li><li>执行 标记为 tag2 和 tag3 的认为</li></ul></li><li><p>--exclude-tags ： 除这些之外的任务</p><ul><li><code>--exclude-tags tag3</code></li><li>执行 标记 tag3 之外的所有任务</li></ul></li></ul><h3 id="_7-test-start-和-test-stop" tabindex="-1">7. test_start 和 test_stop <a class="header-anchor" href="#_7-test-start-和-test-stop" aria-label="Permalink to &quot;7. test_start 和 test_stop&quot;">​</a></h3><p>用于在开始 和 结束 测试时执行。</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> locust </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> events</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">events</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test_start</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_listener</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">on_test_start</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">environment</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;font-style:italic;">kwargs</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">A new test is starting</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">events</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test_stop</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_listener</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">on_test_stop</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">environment</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;font-style:italic;">kwargs</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">A new test is ending</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_8-httpuser" tabindex="-1">8. HttpUser <a class="header-anchor" href="#_8-httpuser" aria-label="Permalink to &quot;8. HttpUser&quot;">​</a></h3><ul><li>Http 继承 User</li><li>用来模拟用户</li><li><code>self.client</code> ：接口请求</li></ul><h2 id="三、-压力测试" tabindex="-1">三、 压力测试 <a class="header-anchor" href="#三、-压力测试" aria-label="Permalink to &quot;三、 压力测试&quot;">​</a></h2><h3 id="_1-文件编写" tabindex="-1">1. 文件编写 <a class="header-anchor" href="#_1-文件编写" aria-label="Permalink to &quot;1. 文件编写&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># locustfile.py</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> random</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> locust </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> HttpUser</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> task</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> between</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 定义 class 来模拟发送 Http 请求的用户</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">QuickstartUser</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">HttpUser</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">  	</span><span style="color:#676E95;font-style:italic;"># 请求间隔 5~9s</span></span>
<span class="line"><span style="color:#A6ACCD;">    wait_time </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">between</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">9</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 通过装饰器将函数定义为用户模拟执行的任务</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">task</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">index_page</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 任务权重，模拟任务执行的比例</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 发送</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">task</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">view_item</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        item_id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> random</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">randint</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">10000</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 发送 get 请求</span></span>
<span class="line"><span style="color:#A6ACCD;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;/item?id=</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">item_id</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/item</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 模拟的每个用户执行任务前先执行的操作</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">on_start</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 发送 post 请求</span></span>
<span class="line"><span style="color:#A6ACCD;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">post</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/login</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">username</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">password</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h3 id="_2-用测执行" tabindex="-1">2. 用测执行 <a class="header-anchor" href="#_2-用测执行" aria-label="Permalink to &quot;2. 用测执行&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">locust </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">f locust_files</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">locustfile</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">py</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>注：如果文件名字是 locustfile.py，可以省略指定名称，因为执行 locust 命令时，源码中默认执行的文件名是 locustfile.py。</p><h3 id="_3、打开-web-ui-压测管理界面" tabindex="-1">3、打开 web UI 压测管理界面 <a class="header-anchor" href="#_3、打开-web-ui-压测管理界面" aria-label="Permalink to &quot;3、打开 web UI 压测管理界面&quot;">​</a></h3><p>在浏览器中输入 <a href="http://127.0.0.1:8089/" target="_blank" rel="noreferrer">http://127.0.0.1:8089/</a> ，打开管理界面如下：</p><p>注意：如果服务部署在服务器，可以通过 IP:8089 访问</p><p>输入模拟的用户数，点击开始 start swarming 就可以开始压测啦。</p><p>参数说明：</p><ul><li>Number of total users to simulate：模拟的用户数量</li><li>Hatch rate：每秒中产生的发送的用户数</li><li>Host：指定向那台服务器发起压测任务</li></ul><p>注：Hatch rate 是客户端向服务器每秒发送多少请求，但是服务器端不一定能处理过来，如果处理不过来，在服务端服请求就会排队等待处理，通过观察服务器 CPU 的负载 Load AVG，可以查看排队情况。</p><h3 id="_4、查看压测监控指标" tabindex="-1">4、查看压测监控指标 <a class="header-anchor" href="#_4、查看压测监控指标" aria-label="Permalink to &quot;4、查看压测监控指标&quot;">​</a></h3><p>开始压测后，在监控详情页，可以实时查看服务器请求的成功失败情况，以及每个请求的响应时间，以及</p><p>最重要的一个参数：RPS 服务器每秒处理请求的数量</p><p><strong>Statistics 压测概要</strong></p><p><strong>监控参数说明：</strong></p><ul><li><code>Type</code>： 请求的类型，例如 GET/POST</li><li><code>Name</code>：请求的路径</li><li><code>request</code>：截止当前为止，客户端已发送请求的数量</li><li><code>fails</code>：截止当前为止，客户端已发送请求失败的数量</li><li><code>Median</code>：中间值，单位毫秒，一半的服务器响应时间低于该值，而另一半高于该值</li><li><code>90%ile</code>：将请求响应时间从小到大排序，第 90%请求的单个耗时，意味着 90%的请求小于当前值</li><li><code>Average</code>：平均值，单位毫秒，所有请求的平均响应时间</li><li><code>Min</code>：请求的最小服务器响应时间，单位毫秒</li><li><code>Max</code>：请求的最大服务器响应时间，单位毫秒</li><li><code>Content Size</code>：单个请求的大小，单位字节</li><li><code>Current RPS</code>：每个任务当前的 RPS 值，即服务器端当前时刻每秒处理当前任务的数量</li><li><code>Current Failures/s</code>：每秒请求失败数</li></ul><p>说明如下：</p><ul><li>Total Requests per second：每秒请求发送数曲线</li><li>Response Times：响应时间曲线</li><li>Number of Users：模拟的用户生成曲线</li></ul><h2 id="四、-运行模式" tabindex="-1">四、 运行模式 <a class="header-anchor" href="#四、-运行模式" aria-label="Permalink to &quot;四、 运行模式&quot;">​</a></h2><h3 id="_1-web-ui-模式" tabindex="-1">1. web ui 模式 <a class="header-anchor" href="#_1-web-ui-模式" aria-label="Permalink to &quot;1. web ui 模式&quot;">​</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">locust</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stress_test.py</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--web-host</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">10.1.44.31</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--web-port</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8090</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><p>--web-host：指定 web UI IP，默认 localhost</p></li><li><p>--web-port：指定 web UI 端口，默认 8089</p></li></ul><h3 id="_2-no-web-模式" tabindex="-1">2. no web 模式 <a class="header-anchor" href="#_2-no-web-模式" aria-label="Permalink to &quot;2. no web 模式&quot;">​</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">locust</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stress_test.py</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--no-web</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-c</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-r</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">120</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><p>--no-web：指定无 web UI 模式</p></li><li><p>-c：起多少 locust 用户（等同于起多少 tcp 连接）</p></li><li><p>-r：多少时间内，把上述 -c 设置的虚拟用户全部启动</p></li><li><p>-t：脚本运行多少时间，单位 s</p></li></ul><h3 id="_3-分布式进程" tabindex="-1">3. 分布式进程 <a class="header-anchor" href="#_3-分布式进程" aria-label="Permalink to &quot;3. 分布式进程&quot;">​</a></h3><h4 id="单台多进程" tabindex="-1">单台多进程： <a class="header-anchor" href="#单台多进程" aria-label="Permalink to &quot;单台多进程：&quot;">​</a></h4><p>先启一个 master</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">locust</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/home/script/stress_test.py</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--web-host</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">10.1.62.223</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--master</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>再启 8 个 slave</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">locust</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/home/script/stress_test.py</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--slave</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>slave 节点启动后，在 locust 监控中能看到</p><h4 id="多台多进程" tabindex="-1">多台多进程： <a class="header-anchor" href="#多台多进程" aria-label="Permalink to &quot;多台多进程：&quot;">​</a></h4><p>多台机器搭建 Locust 分布式 和 单台搭建多进程差不多。<strong>只有一个区别，如果 slave 和 master 不在一台机器上， slave 需要指定 --master-host 参数：</strong></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">locust</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/home/script/stress_test.py</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--slave</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--master-host</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">10.1.62.223</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_4-使用分布式" tabindex="-1">4. 使用分布式 <a class="header-anchor" href="#_4-使用分布式" aria-label="Permalink to &quot;4. 使用分布式&quot;">​</a></h3><h4 id="开启-master-实例" tabindex="-1">开启 Master 实例 <a class="header-anchor" href="#开启-master-实例" aria-label="Permalink to &quot;开启 Master 实例&quot;">​</a></h4><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">locust</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my_locustfile.py</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--master</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="然后在每个-worker-上-xxx-为-master-实例的-ip-或者如果您的-worker-与主计算机在同一台计算机上-则完全省略该参数" tabindex="-1">然后在每个 <strong>Worker</strong> 上( xxx 为 master 实例的 IP，或者如果您的 Worker 与主计算机在同一台计算机上，则完全省略该参数)： <a class="header-anchor" href="#然后在每个-worker-上-xxx-为-master-实例的-ip-或者如果您的-worker-与主计算机在同一台计算机上-则完全省略该参数" aria-label="Permalink to &quot;然后在每个 **Worker** 上( xxx 为 master 实例的 IP，或者如果您的 Worker 与主计算机在同一台计算机上，则完全省略该参数)：&quot;">​</a></h4><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">locust</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my_locustfile.py</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--worker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--master-host=xxx</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><code>--master</code>：将 locust 设置为 master 模式。Web 界面将在此节点上运行。</li><li><code>--worker</code>：将蝗虫设置为 worker 模式。</li><li><code>--master-host=X.X.X.X</code>：(可选) 与 --worker 设置 master 节点的<code>主机名/IP</code> 一起使用（默认为 127.0.0.1）</li><li><code>--master-port=5557</code>：(可选) 与 --worker 设置 master 节点的<code>端口号</code>一起使用（默认为 5557）。</li><li><code>--master-bind-host=X.X.X.X</code>：(可选) 与 --master. 确定 master 节点将绑定到的网络接口。默认为 *（所有可用接口）。</li><li><code>--master-bind-port=5557</code>：(可选) 与 --master. 确定 master 节点将侦听的网络端口。默认为 5557。</li><li><code>--expect-workers=X</code>：在使用 启动主节点时使用 --headless。然后，主节点将等待 X 个 worker 节点连接，然后再开始测试。</li></ul>`,91),o=[e];function t(r,c,i,y,D,F){return a(),n("div",null,o)}const b=s(p,[["render",t]]);export{A as __pageData,b as default};
