import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.1b72a0e7.js";const C=JSON.parse('{"title":"四、VScode 使用技巧 - 自定义 markdown 代码判断","description":"","frontmatter":{},"headers":[],"relativePath":"零散知识/VScode中自定义代码片段.md","lastUpdated":1705907257000}'),e={name:"零散知识/VScode中自定义代码片段.md"},o=l(`<h1 id="四、vscode-使用技巧-自定义-markdown-代码判断" tabindex="-1">四、VScode 使用技巧 - 自定义 markdown 代码判断 <a class="header-anchor" href="#四、vscode-使用技巧-自定义-markdown-代码判断" aria-label="Permalink to &quot;四、VScode 使用技巧 - 自定义 markdown 代码判断&quot;">​</a></h1><h2 id="一-创建配置文件" tabindex="-1">一. 创建配置文件 <a class="header-anchor" href="#一-创建配置文件" aria-label="Permalink to &quot;一. 创建配置文件&quot;">​</a></h2><h3 id="_1-选择-配置用户代码片段" tabindex="-1">1. 选择 &quot;配置用户代码片段&quot; <a class="header-anchor" href="#_1-选择-配置用户代码片段" aria-label="Permalink to &quot;1. 选择 &quot;配置用户代码片段&quot;&quot;">​</a></h3><p><img src="https://img.pupper.cn/img/202304031751540.png" alt=""></p><h3 id="_2-创建配置文件" tabindex="-1">2. 创建配置文件 <a class="header-anchor" href="#_2-创建配置文件" aria-label="Permalink to &quot;2. 创建配置文件&quot;">​</a></h3><p>输入文件名,创建 markdown 配置文件</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">markdown.json</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="https://img.pupper.cn/img/202304031756408.png" alt=""></p><ul><li>类型一：全局作用域 <ul><li>这种类型的代码块是创建在 vscode 软件内部的文件。是跟随这当前安装的 vscode 这个软件的，不会随着项目的关闭而失效，会一直存在。</li></ul></li><li>类型二：文件夹作用域 <ul><li>这种类型的代码块是创建在某个文件下.vscode 这个隐藏文件夹中的，这个代码块只适用于当前文件夹，出了这个文件夹就不能使用这个代码块了</li></ul></li><li>类型三：特定文件类型作用域 - 这种类型的代码块跟全局作用域的文件路径是一致的，都是创建在了 vscode 中，会一直存在。但是这种代码块只适合于你指定的文件类型。比如：如果你创建的是 JavaScript 类型，那这个代码块就不能再 vue 文件中使用。 <em>注意三种类型的代码块书写规范都是一致的</em></li></ul><h3 id="_3-编写自定义代码块" tabindex="-1">3. 编写自定义代码块 <a class="header-anchor" href="#_3-编写自定义代码块" aria-label="Permalink to &quot;3. 编写自定义代码块&quot;">​</a></h3><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Example:</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// &quot;Print to console&quot;: {</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// 	&quot;prefix&quot;: &quot;log&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// 	&quot;body&quot;: [</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// 		&quot;console.log(&#39;$1&#39;);&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// 		&quot;$2&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// 	],</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// 	&quot;description&quot;: &quot;Log output to console&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">行内文本</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">prefix</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">span</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">body</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{% span \${1|red,yellow,green,cyan,blue,gray|}, $2 %}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">description</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">行内文本</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><ul><li><code>prefix</code>： 触发代码块的字符串。写代码的时候我们只需敲出这个字符串就会触发我们的代码块。</li><li><code>body</code>：代码块的主体内容。我们需要把我们的代码书写在这个属性中。仔细观察我们可以看出，代码块主体就是字符串的数组。</li><li><code>description</code>：代码块的简单介绍，我们可以介绍一下这段代码块是干什么用的</li></ul><p><img src="https://img.pupper.cn/img/202304031759595.png" alt=""></p><h3 id="_4-自定义代码块的使用" tabindex="-1">4. 自定义代码块的使用 <a class="header-anchor" href="#_4-自定义代码块的使用" aria-label="Permalink to &quot;4. 自定义代码块的使用&quot;">​</a></h3><p><img src="https://img.pupper.cn/img/202304031810513.gif" alt=""></p><h2 id="二-一些使用技巧" tabindex="-1">二. 一些使用技巧 <a class="header-anchor" href="#二-一些使用技巧" aria-label="Permalink to &quot;二. 一些使用技巧&quot;">​</a></h2><p>代码主体的书写规范：</p><ul><li>每个字符串元素就代表一行，行与行之间用&quot; , &quot;隔开表示换行。或者使用\\n 换行</li><li>行内不能使用 tab 键缩进，只能使用空格或者\\t 缩进</li><li>$1 使用代码块敲击回车或者 tab 键后光标定位的位置。$2 $3 $4…表示我们按下 tab 光标依次出现的位置</li><li>\${1|one,two,three|}: 占位符(Placeholders)可以有多选值，每个选项的值用 , 分隔，选项的开始和结束用管道符号(|)将选项包含。</li></ul><ol><li>在不同的<code>$</code>之间切换用 <code>tab键</code>， 如果想反向切换使用<code>shift +tab</code>键。</li><li><code>\${1:defaultVal}</code> 可以直接设置当前位置的默认值。</li><li><code>\${1|GET,POST,PUT,DELETE,UPDATE|}</code>可以给默认可选项供人选择。其中<code>|</code>之间用逗号分隔的字符为选项</li><li><code>\\n</code>换行, <code>\\t</code>制表符。 支持转义字符。比如如果想输出<code>this.$message.success(&quot;xx&quot;)</code>这行代码。 就需要在<code>body</code>中添加<code>&quot;this.\\\\$message.success(\\&quot;xx\\&quot;)&quot;</code></li><li>在不同的文件中设置不同的<code>scope</code>可以有效防止出错或混淆，最好设置下。常用的 scope 有<code>vue, script, css, javascript, typescript, html, json</code>等 如果不设置， 默认在任何文件中都生效。</li><li>如果<code>prefix</code>设置的代码片段名称一致， 不会造成覆盖和报错， 而是会与插件中的同名代码片段和其他同名代码片段同时出现在提示代码中, 所以要写好描述和名称来进行区分。</li><li><code>$0</code>最好在每个代码片段中都设置一下， 否则。会造成无法结束代码片段操作，每次都要多操作一次才能结束。</li><li><code>Trigger Suggest</code>: 当网络比较卡或者你当前的代码片段不显示时， 可以使用<code>trigger suggest</code>触发建议快捷键来查看当前文本的代码片段是什么。 快捷键打开方式(首选项 -&gt; Keyboard Shortcuts)。 这是推荐的做法。 当然也有比较 low 的做法， 删一个字符串， 也能重新看到代码片段提示。</li><li><em>重要</em>: 自己写代码片段有时是比较容易出错的且费时费力， 还好有现成的网站， 可以把我们的代码直接生成代码片段 <a href="http://snippet-generator.app/" target="_blank" rel="noreferrer">snippet-generator</a></li></ol><p><code>一些较常用变量， 使用语法: \${TM_SELECTED_TEXT}</code> TM_SELECTED_TEXT 当前选定的文本或空字符串 TM_CURRENT_LINE 当前行的内容 TM_CURRENT_WORD 光标下的单词的内容或空字符串 TM_LINE_INDEX 基于零索引的行号 TM_LINE_NUMBER 基于一索引的行号 TM_FILENAME 当前文档的文件名 TM_FILENAME_BASE 当前文档的文件名(不含后缀名) TM_DIRECTORY 当前文档的目录 RELATIVE_FILEPATH 当前文件的相对目录 TM_FILEPATH 当前文档的完整文件路径 CLIPBOARD 剪切板里的内容</p><p>CURRENT_YEAR 当前年(四位数) CURRENT_MONTH 当前月 CURRENT_DATE 当前日 CURRENT_DAY_NAME_SHORT 当天的短名称（’Mon’） CURRENT_HOUR 当前小时 CURRENT_MINUTE 当前分钟 CURRENT_SECOND 当前秒</p><p>插入随机值 RANDOM 6 位随机 10 进制数 RANDOM_HEX 6 位 16 进制数 UUID 一个版本 4 的 UUID</p><p>/*_ 286055 f570d8 0a831688-a7f1-4668-9964-f6100114792c _/</p><p>BLOCK<em>COMMENT_START 块注释开始标识,如 PHP /</em> 或 HTML  LINE_COMMENT 行注释，如： PHP // 或 HTML </p><h2 id="三-问题解决" tabindex="-1">三. 问题解决 <a class="header-anchor" href="#三-问题解决" aria-label="Permalink to &quot;三. 问题解决&quot;">​</a></h2><h3 id="_3-1-解决-自定义代码片段不生效的问题" tabindex="-1">3.1 解决 &quot;自定义代码片段不生效的问题&quot; <a class="header-anchor" href="#_3-1-解决-自定义代码片段不生效的问题" aria-label="Permalink to &quot;3.1 解决 &quot;自定义代码片段不生效的问题&quot;&quot;">​</a></h3><p>在 <code>settings.json</code> 配置文件中加入一下代码即可</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">[markdown]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">editor.quickSuggestions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="https://img.pupper.cn/img/202304031826459.png" alt=""></p>`,29),p=[o];function t(c,r,i,d,u,D){return a(),n("div",null,p)}const m=s(e,[["render",t]]);export{C as __pageData,m as default};
