import{_ as r,B as p,o as c,c as i,D as e,z as n,Q as o,a,x as s}from"./chunks/framework.1b72a0e7.js";const k=JSON.parse('{"title":"二、ORM 数据操作","description":"","frontmatter":{},"headers":[],"relativePath":"软件测试/Django框架技术/ORM数据操作.md","lastUpdated":1699944726000}'),d={name:"软件测试/Django框架技术/ORM数据操作.md"},u=o(`<h1 id="二、orm-数据操作" tabindex="-1">二、ORM 数据操作 <a class="header-anchor" href="#二、orm-数据操作" aria-label="Permalink to &quot;二、ORM 数据操作&quot;">​</a></h1><h2 id="一、-多级路由转发" tabindex="-1">一、 多级路由转发 <a class="header-anchor" href="#一、-多级路由转发" aria-label="Permalink to &quot;一、 多级路由转发&quot;">​</a></h2><p><img src="https://img.pupper.cn/img/20220726094941.png" alt=""></p><h3 id="_1-django-的路由分发" tabindex="-1">1. Django 的路由分发 <a class="header-anchor" href="#_1-django-的路由分发" aria-label="Permalink to &quot;1. Django 的路由分发&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> django</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">urls </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> path</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> include</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> app </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> urls</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">urlpatterns </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 以 app 开头的路径，全部交给 app 处理</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">path</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1级路由</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> include</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">urls</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="二、-数据库模型-orm" tabindex="-1">二、 数据库模型 --- ORM <a class="header-anchor" href="#二、-数据库模型-orm" aria-label="Permalink to &quot;二、 数据库模型 --- ORM&quot;">​</a></h2><p><code>Object Relational Mapping</code> 对象关系映射</p><p>ORM 的优势 ： 利用编程语言方便操作数据库，无需掌握复杂的 sql 语句</p><p><img src="https://img.pupper.cn/img/20220726095003.png" alt=""></p><h3 id="_1-orm-用法" tabindex="-1">1. ORM 用法 <a class="header-anchor" href="#_1-orm-用法" aria-label="Permalink to &quot;1. ORM 用法&quot;">​</a></h3><ul><li>数据模型定义在 APP 目录下的 <code>models.py</code> 中</li><li>模型类继承 Django 的 <code>models.Model</code> 模型基本类</li><li>类名对应表名称，实际是小写应用名_小写模型类名</li><li>类成员对应数据的字段类型</li></ul><p><img src="https://img.pupper.cn/img/20220726095025.png" alt=""></p><h3 id="_2-数据库常用字段类型" tabindex="-1">2. 数据库常用字段类型 <a class="header-anchor" href="#_2-数据库常用字段类型" aria-label="Permalink to &quot;2. 数据库常用字段类型&quot;">​</a></h3><p><a href="https://docs.djangoproject.com/zh-hans/3.1/ref/models/fields/#field-options" target="_blank" rel="noreferrer"><strong>Django 字段参考</strong></a></p><h4 id="常用字段" tabindex="-1">常用字段 <a class="header-anchor" href="#常用字段" aria-label="Permalink to &quot;常用字段&quot;">​</a></h4><p><code>CharField</code> ： 字符串类型， 必须接收一个 <code>max_length 参数</code>， 表示字符串最大长度</p><p><code>BooleanField</code> ： 布尔值类型， 默认为 None</p><p><code>DateTimeField</code> ： 日期时间类型， python 的 datetime.datetime 实例</p><p><code>IntegerField</code> ： 整数类型，范围 -2,147,483,648 到 2,147,483,647 。</p><h4 id="字段-参数" tabindex="-1">字段 参数 <a class="header-anchor" href="#字段-参数" aria-label="Permalink to &quot;字段 参数&quot;">​</a></h4><p><code>null</code> ： 如果是 True，Django 将在数据库中存储空值 NULL， 默认为 False</p><p><code>default</code> ： 默认值。可以是一个值，也可以是一个可调用的对象，不能是一个可更改的对象</p><p><code>unique</code> ： 如果设置为 true，这个字段在整个表中保持值唯一。 默认为 False。若为 True 该字段可以成为一个唯一索引</p><p><code>verbose_name</code> ： 字段备注名。如果没有给定详细名称，Django 会使用字段的属性名自动创建，下划线转换为空格</p><p><code>primary_key</code> ： 如果设置为 True，将该字段设置为该模型的主键，最多只有一个字段被设置，如果没有设置，Django 会自带创建一个名为 ID 的字段作为主键</p><h2 id="三、-数据库的激活与迁移" tabindex="-1">三、 数据库的激活与迁移 <a class="header-anchor" href="#三、-数据库的激活与迁移" aria-label="Permalink to &quot;三、 数据库的激活与迁移&quot;">​</a></h2><h3 id="_1-数据模型配置" tabindex="-1">1. 数据模型配置 <a class="header-anchor" href="#_1-数据模型配置" aria-label="Permalink to &quot;1. 数据模型配置&quot;">​</a></h3><ul><li><p><code>settings.py</code> 设置对应的数据库连接信息</p><ul><li>如果用默认的 sqlite 作为开发数据库可以不用设置</li></ul><p><img src="https://img.pupper.cn/img/20220726095102.png" alt=""></p></li><li><p><code>settings.py</code> 关联对应数据所在的 app</p><ul><li>即 为应用注册</li></ul><p><img src="https://img.pupper.cn/img/20220726095127.png" alt=""></p></li></ul><h3 id="_2-数据迁移命令" tabindex="-1">2. 数据迁移命令 <a class="header-anchor" href="#_2-数据迁移命令" aria-label="Permalink to &quot;2. 数据迁移命令&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>修改数据库后，需要运行这两个命令同步数据库</p></div><ul><li><p>生成模型迁移文件（此时不操作数据库）</p><div class="language-cmd line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">python manage.py makemigrations</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>同步到数据库（此时操作数据库）</p><div class="language-cmd line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">python manage.py migrate</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ul><h2 id="四、-数据库-api-操作" tabindex="-1">四、 数据库 API 操作 <a class="header-anchor" href="#四、-数据库-api-操作" aria-label="Permalink to &quot;四、 数据库 API 操作&quot;">​</a></h2><h3 id="_1-django-自动命令行" tabindex="-1">1. Django 自动命令行 <a class="header-anchor" href="#_1-django-自动命令行" aria-label="Permalink to &quot;1. Django 自动命令行&quot;">​</a></h3><div class="language-cmd line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">python manage.py shell</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">或者</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">django</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">admin shell	# python mange.py 相当于 django</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">admin</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="https://img.pupper.cn/img/20220726095158.png" alt=""></p><h3 id="_2-模型管理器-manager" tabindex="-1">2. 模型管理器（Manager） <a class="header-anchor" href="#_2-模型管理器-manager" aria-label="Permalink to &quot;2. 模型管理器（Manager）&quot;">​</a></h3><p>模型管理器 ： 管理当前数据模型对应表的 增删改查 操作</p><p>只能通过类调用，不能通过实例调用</p><p>如 <code>Event.objects</code> 而不是 <code>Event（）.objects</code></p><h4 id="使用模型管理器-增-查" tabindex="-1">使用模型管理器 增 查 <a class="header-anchor" href="#使用模型管理器-增-查" aria-label="Permalink to &quot;使用模型管理器 增 查&quot;">​</a></h4><div class="language-cmd line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">增</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Event.objects.create（name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">发布会</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, address</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">软件大道</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-cmd line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">查</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Event.objects.</span><span style="color:#82AAFF;">all</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_3-增、删、改、查" tabindex="-1">3. 增、删、改、查 <a class="header-anchor" href="#_3-增、删、改、查" aria-label="Permalink to &quot;3. 增、删、改、查&quot;">​</a></h3><h4 id="_1-增" tabindex="-1">1. 增 <a class="header-anchor" href="#_1-增" aria-label="Permalink to &quot;1. 增&quot;">​</a></h4><div class="language-cmd line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Model.objects.</span><span style="color:#82AAFF;">create</span><span style="color:#89DDFF;">(**</span><span style="color:#A6ACCD;">kw</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_2-删" tabindex="-1">2. 删 <a class="header-anchor" href="#_2-删" aria-label="Permalink to &quot;2. 删&quot;">​</a></h4><div class="language-cmd line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">modelObj.</span><span style="color:#82AAFF;">delete</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_3-改" tabindex="-1">3. 改 <a class="header-anchor" href="#_3-改" aria-label="Permalink to &quot;3. 改&quot;">​</a></h4><div class="language-cmd line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">new_modelObj.</span><span style="color:#82AAFF;">save</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_4-查" tabindex="-1">4. 查 <a class="header-anchor" href="#_4-查" aria-label="Permalink to &quot;4. 查&quot;">​</a></h4><div class="language-cmd line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Model.objects.</span><span style="color:#82AAFF;">filiter</span><span style="color:#89DDFF;">(**</span><span style="color:#A6ACCD;">kw</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><p>查询所有 select * from 表名</p><ul><li><code>Model.objects.all()</code> ： 返回 QuerySet 对象</li></ul></li><li><p>过滤查询条件 select * from 表名 where xxx</p><ul><li><code>Model.objects.filter(**kw)</code> ： 返回 QuerySet 对象</li><li><code>Model.objects.values(**kw)</code> ： 返回 QuerySet 对象（内容时数据键值对）</li></ul></li><li><p>查询单个 select * from 表名 where xxx limits=1</p><ul><li><code>Model.objects.get(**kw)</code> ： 返回单个模型数据对象，如果结果超过或者少于 1 个抛出异常</li></ul></li><li><p>快捷操作查</p><ul><li><code>get_object_or_404(模型类，**kw)</code></li></ul></li></ul><p><code>**KW</code> ： 表示查询参数，对应数据库字段名：值</p><h2 id="五、-django-自带-admin-后台" tabindex="-1">五、 Django 自带 admin 后台 <a class="header-anchor" href="#五、-django-自带-admin-后台" aria-label="Permalink to &quot;五、 Django 自带 admin 后台&quot;">​</a></h2><h3 id="_1-注册-超级用户" tabindex="-1">1. 注册 超级用户 <a class="header-anchor" href="#_1-注册-超级用户" aria-label="Permalink to &quot;1. 注册 超级用户&quot;">​</a></h3><div class="language-cmd line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">python manage.py createsuperuser</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>页面地址：</p><p><code>http://127.0.0.1:8000/admin/</code></p><h3 id="_2-后台数据关联数据模型" tabindex="-1">2. 后台数据关联数据模型 <a class="header-anchor" href="#_2-后台数据关联数据模型" aria-label="Permalink to &quot;2. 后台数据关联数据模型&quot;">​</a></h3><p>在 <code>admin.py</code> 文件中修改</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> sgin </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> models</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">admin</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">site</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">register</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">models</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">Event</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="https://img.pupper.cn/img/20220726095224.png" alt=""><img src="https://img.pupper.cn/img/20220726095248.png" alt=""></p><h3 id="_3-修改显示信息" tabindex="-1">3. 修改显示信息 <a class="header-anchor" href="#_3-修改显示信息" aria-label="Permalink to &quot;3. 修改显示信息&quot;">​</a></h3><p>在 <code>models.py</code> 文件中修改</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">__str__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">name</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="https://img.pupper.cn/img/20220726095309.png" alt=""><img src="https://img.pupper.cn/img/20220726095332.png" alt=""></p><h3 id="_4-通过-数据库表的主键-id-来实现页面跳转" tabindex="-1">4. 通过 数据库表的主键（id）来实现页面跳转 <a class="header-anchor" href="#_4-通过-数据库表的主键-id-来实现页面跳转" aria-label="Permalink to &quot;4. 通过 数据库表的主键（id）来实现页面跳转&quot;">​</a></h3>`,67),m=s("div",{class:"language-python line-numbers-mode"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"python"),s("pre",{class:"shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#89DDFF","font-style":"italic"}},"from"),s("span",{style:{color:"#A6ACCD"}}," django"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#A6ACCD"}},"urls "),s("span",{style:{color:"#89DDFF","font-style":"italic"}},"import"),s("span",{style:{color:"#A6ACCD"}}," path")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF","font-style":"italic"}},"from"),s("span",{style:{color:"#A6ACCD"}}," sgin "),s("span",{style:{color:"#89DDFF","font-style":"italic"}},"import"),s("span",{style:{color:"#A6ACCD"}}," views")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"urlpatterns "),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#A6ACCD"}}," "),s("span",{style:{color:"#89DDFF"}},"[")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"    "),s("span",{style:{color:"#82AAFF"}},"path"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#89DDFF"}},"'"),s("span",{style:{color:"#C3E88D"}},"events/"),s("span",{style:{color:"#89DDFF"}},"'"),s("span",{style:{color:"#89DDFF"}},","),s("span",{style:{color:"#82AAFF"}}," views"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#F07178"}},"events"),s("span",{style:{color:"#89DDFF"}},"),")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"    "),s("span",{style:{color:"#82AAFF"}},"path"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#89DDFF"}},"'"),s("span",{style:{color:"#C3E88D"}},"event_detail/<int:event_id>"),s("span",{style:{color:"#89DDFF"}},"'"),s("span",{style:{color:"#89DDFF"}},","),s("span",{style:{color:"#82AAFF"}}," views"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#F07178"}},"event_detail"),s("span",{style:{color:"#89DDFF"}},"),")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},"]")]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers-wrapper","aria-hidden":"true"},[s("span",{class:"line-number"},"1"),s("br"),s("span",{class:"line-number"},"2"),s("br"),s("span",{class:"line-number"},"3"),s("br"),s("span",{class:"line-number"},"4"),s("br"),s("span",{class:"line-number"},"5"),s("br"),s("span",{class:"line-number"},"6"),s("br"),s("span",{class:"line-number"},"7"),s("br")])],-1),h=s("h1",{id:"发布会详情",tabindex:"-1"},[a("发布会详情 "),s("a",{class:"header-anchor",href:"#发布会详情","aria-label":'Permalink to "发布会详情"'},"​")],-1),b=s("p",null,'def event_detail(request, event_id): # 根据 event_id 查询对应的发布会数据 # pk:主键 默认数据表中的主键名为id event = Event.objects.get(pk=event_id) return render(request, "sgin/event_detail.html", {"event":event})',-1),y=s("div",{class:"language- line-numbers-mode"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"}),s("pre",{class:"shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"</code-block>")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'<code-block title="events.html">')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"```html")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'{% extends "sgin/base.html" %} {% block content %}')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'<ul class="list-group">')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"{% for event in event_list %}")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'<li class="list-group-item text-center">')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'  <a href="/sgin/event_detail/{{ event.id }}">{{ event }}</a>')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"</li>")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"{% endfor %}")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"</ul>")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"{% endblock %}")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])]),s("div",{class:"line-numbers-wrapper","aria-hidden":"true"},[s("span",{class:"line-number"},"1"),s("br"),s("span",{class:"line-number"},"2"),s("br"),s("span",{class:"line-number"},"3"),s("br"),s("span",{class:"line-number"},"4"),s("br"),s("span",{class:"line-number"},"5"),s("br"),s("span",{class:"line-number"},"6"),s("br"),s("span",{class:"line-number"},"7"),s("br"),s("span",{class:"line-number"},"8"),s("br"),s("span",{class:"line-number"},"9"),s("br"),s("span",{class:"line-number"},"10"),s("br"),s("span",{class:"line-number"},"11"),s("br"),s("span",{class:"line-number"},"12"),s("br"),s("span",{class:"line-number"},"13"),s("br"),s("span",{class:"line-number"},"14"),s("br"),s("span",{class:"line-number"},"15"),s("br")])],-1),D=o(`<h2 id="六、-数据库表关联" tabindex="-1">六、 数据库表关联 <a class="header-anchor" href="#六、-数据库表关联" aria-label="Permalink to &quot;六、 数据库表关联&quot;">​</a></h2><h3 id="_1-外键的定义方式-多对-1" tabindex="-1">1. 外键的定义方式（多对 1） <a class="header-anchor" href="#_1-外键的定义方式-多对-1" aria-label="Permalink to &quot;1. 外键的定义方式（多对 1）&quot;">​</a></h3><div class="language-CMD line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">CMD</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">models.</span><span style="color:#82AAFF;">ForeignKey</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">目标模型类， on_delete</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">models.CASCADE</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>此外键定义在多对一方</p><h4 id="on-delete-可选项" tabindex="-1">on_delete 可选项 <a class="header-anchor" href="#on-delete-可选项" aria-label="Permalink to &quot;on_delete 可选项&quot;">​</a></h4><ul><li><code>CASCADE</code> ： 模拟 SQL 语音中的 ON DELETE CASCADE 约束，将定义有违建的模型对象同时删除</li><li><code>PROTECT</code> ： 组织上面的删除操作，但是弹出 ProtectedError 异常</li><li><code>SET_NULL</code> ： 将外键字段设置为 null， 只有当字段设置了 null=True 时，方可使用该值</li><li><code>SET_DEFAULT</code> ： 将外键字段设置为默认值。只有当字段设置了 default 参数时，方可使用</li><li><code>DO_NOTHING</code> ： 什么也不做</li><li><code>SET()</code> ： 自定义值，参数可以为常量或者回调函数的返回值</li></ul><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 关联发布会</span></span>
<span class="line"><span style="color:#A6ACCD;">event </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> models</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ForeignKey</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">Event</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">on_delete</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">models</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">DO_NOTHING</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">verbose_name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">关联发布会</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="https://img.pupper.cn/img/20220726095402.png" alt=""></p><h3 id="_2-外键的定义方式-多对多" tabindex="-1">2. 外键的定义方式（多对多） <a class="header-anchor" href="#_2-外键的定义方式-多对多" aria-label="Permalink to &quot;2. 外键的定义方式（多对多）&quot;">​</a></h3><div class="language-cmd line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">modelsManyToManyField（目标模型类）</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>只可以在一方定义，不可以两方同时定义</p>`,11);function F(A,C,g,_,v,f){const l=p("code-block"),t=p("code-group");return c(),i("div",null,[u,e(t,null,{default:n(()=>[e(l,{title:"urls.py",active:""},{default:n(()=>[m]),_:1}),e(l,{title:"views.py"},{default:n(()=>[a(" ```python def events(request): # 从数据库查询所有发布会信息 event_list = Event.objects.all() return render(request, \"sgin/events.html\", {'event_list':event_list}) "),h,b,y]),_:1})]),_:1}),D])}const x=r(d,[["render",F]]);export{k as __pageData,x as default};
