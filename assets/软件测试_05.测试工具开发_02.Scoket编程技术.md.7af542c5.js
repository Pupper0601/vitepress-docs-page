import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.1b72a0e7.js";const b=JSON.parse('{"title":"二、scoket 网络编程技术","description":"","frontmatter":{},"headers":[],"relativePath":"软件测试/05.测试工具开发/02.Scoket编程技术.md","lastUpdated":1705907257000}'),p={name:"软件测试/05.测试工具开发/02.Scoket编程技术.md"},o=l(`<h1 id="二、scoket-网络编程技术" tabindex="-1">二、scoket 网络编程技术 <a class="header-anchor" href="#二、scoket-网络编程技术" aria-label="Permalink to &quot;二、scoket 网络编程技术&quot;">​</a></h1><h2 id="一、网络编程技术概述" tabindex="-1">一、网络编程技术概述 <a class="header-anchor" href="#一、网络编程技术概述" aria-label="Permalink to &quot;一、网络编程技术概述&quot;">​</a></h2><h3 id="_1-软件开发架构" tabindex="-1">1.软件开发架构 <a class="header-anchor" href="#_1-软件开发架构" aria-label="Permalink to &quot;1.软件开发架构&quot;">​</a></h3><ul><li><p><strong>应用类 -- C/S 架构</strong></p><p><code>C/S</code> ：客户端与服务器端架构，客户端 泛指 <strong>应用程序 EXE</strong> ，程序需要先安装才能运行，对系统环境依赖较大。</p></li><li><p><strong>Web 类 -- B/S 架构</strong></p><p><code>B/S</code> ：浏览器端与服务器端架构，用户通过 <strong>HTTP</strong> 请求服务器端相关的资源。</p></li></ul><h3 id="_2-网络通信要素" tabindex="-1">2.网络通信要素 <a class="header-anchor" href="#_2-网络通信要素" aria-label="Permalink to &quot;2.网络通信要素&quot;">​</a></h3><ul><li><strong>IP 地址</strong> ：互联网协议地址</li><li><strong>端口</strong> ：设备与外界通讯交流的出口</li><li><strong>传输协议</strong></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>IP 地址</strong> 精确到 <strong>具体的一台电脑</strong>，而 <strong>端口</strong> 精确到 <strong>具体的程序</strong></p></div><h3 id="_3-通信协议" tabindex="-1">3.通信协议 <a class="header-anchor" href="#_3-通信协议" aria-label="Permalink to &quot;3.通信协议&quot;">​</a></h3><p>通信协议：互联网的核心就是由一堆协议组成，协议就是标准。</p><p><strong>七层网络协议模型</strong></p><p><img src="https://img.pupper.cn/img/20220725182835.png" alt=""></p><h2 id="二、socket-通信流程" tabindex="-1">二、Socket 通信流程 <a class="header-anchor" href="#二、socket-通信流程" aria-label="Permalink to &quot;二、Socket 通信流程&quot;">​</a></h2><h3 id="_1-socket-概念" tabindex="-1">1.Socket 概念 <a class="header-anchor" href="#_1-socket-概念" aria-label="Permalink to &quot;1.Socket 概念&quot;">​</a></h3><p><code>Socket</code> ：是应用层与 TCP/IP 协议族通信的中间软件抽象层，它是一组接口。</p><p>​ 在设计模式中，<strong>Sorcket</strong> 其实就是一个门面模式，它把复杂的 <strong>TPC/IP</strong> 协议族隐藏在 <strong>Socket</strong> 接口后面，对用户来说，一组简单的接口就是全部，让 <strong>Socket</strong> 去组织数据，以符合指定的协议。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>1.<code>websocket</code> （应用层） ：通过 <strong>HTTP</strong> 协议进行传输，</p><p>2.<code>socket</code> （传输层） ：通过 <strong>TCP</strong> 协议进行传输</p></div><h3 id="_2-socket-实现方式-tcp-协议与-udp-协议" tabindex="-1">2.Socket 实现方式：TCP 协议与 UDP 协议 <a class="header-anchor" href="#_2-socket-实现方式-tcp-协议与-udp-协议" aria-label="Permalink to &quot;2.Socket 实现方式：TCP 协议与 UDP 协议&quot;">​</a></h3><ul><li><p><code>TCP</code> 协议 ：可靠的、面向连接的协议（eg：打电话）、传输效率低全双工通信（发送缓存&amp;接收缓存）、面向字节流。</p><p><strong>主要用途</strong>：Web 浏览器、电子邮件、文件传输程序</p></li><li><p><code>UDP</code> 协议 ： 不可靠的、无连接的服务，传输效率高，一对一、多对多、一对多、多对一、面向报文，尽最大的努力服务，无拥塞控制。</p><p><strong>主要用途</strong>：域名系统、视频流、IP 语音。</p></li><li><p><code>TCP</code> 和 <code>UDP</code> 都是 <strong>传输层</strong> 的。</p></li></ul><p><strong>TCP</strong> 协议流程图：</p><p><img src="https://img.pupper.cn/img/20220725182911.png" alt=""></p><h3 id="_3-socket-通信流程" tabindex="-1">3. Socket 通信流程 <a class="header-anchor" href="#_3-socket-通信流程" aria-label="Permalink to &quot;3. Socket 通信流程&quot;">​</a></h3><ol><li><p>服务器根据地址类型、Socket 类型、协议 <strong>创建 Scoket</strong> ；</p></li><li><p>服务器为 socket <strong>绑定 IP 地址和端口号</strong> ；</p></li><li><p>服务器 <strong>socket 监听端口号请求</strong> ，随时准备 接收客户端发送来的连接，这个时候服务器端的 Socket 并没有打开；</p></li><li><p><strong>客户端创建 Socket</strong> ；</p></li><li><p><strong>客户端打开 socket</strong> ，根据服务器 <strong>IP 地址</strong>和 <strong>端口号</strong> 试图<strong>连接服务器 socket</strong> ；</p></li><li><p>服务器 Scoket 接收到客户端的 socket 请求，被动打开，<strong>开始接收客户端请求</strong>，直到客户端返回连接信息。这个时候 socket 进入阻塞状态。</p><p><code>阻塞状态</code>：即 <code>accept（）</code> 方法一直等到客户端返回连接信息后才返回，开始接收下一个客户端连接请求。</p></li><li><p>**客户端连接成功，****向服务器发送连接状态信息**。</p></li><li><p><strong>服务器 accept 方法返回</strong>，连接成功；</p></li><li><p><strong>客户端向 socket 写入信息</strong>（或服务端向 socket 写入信息）；</p></li><li><p><strong>服务器读取信息</strong>（客户端读取信息）；</p></li><li><p>客户端关闭；</p></li><li><p>服务器关闭。</p></li></ol><p><img src="https://img.pupper.cn/img/20220725182954.png" alt=""></p><h2 id="socket-常用方法" tabindex="-1">Socket 常用方法 <a class="header-anchor" href="#socket-常用方法" aria-label="Permalink to &quot;Socket 常用方法&quot;">​</a></h2><h3 id="_1-python-的-socket-编程" tabindex="-1">1.Python 的 Socket 编程 <a class="header-anchor" href="#_1-python-的-socket-编程" aria-label="Permalink to &quot;1.Python 的 Socket 编程&quot;">​</a></h3><ul><li><strong>低级别的网络服务</strong> 支持基本的 <code>Socket</code> ，它提供了标准的 BSD Socket API ，可以访问底层操作系统 Socket 接口的全部方法。</li><li>**高级别的网络服务 **模块 <code>SocketServer</code> ， 它提供了服务器中心类，可以简化网络服务器的开发。</li></ul><h3 id="_2-什么是-socket-编程" tabindex="-1">2.什么是 Socket 编程 <a class="header-anchor" href="#_2-什么是-socket-编程" aria-label="Permalink to &quot;2.什么是 Socket 编程&quot;">​</a></h3><p><code>socket</code> ：又称 ”套接字“ ，应用程序通常通过 ”套接字“ 向网络发出请求或者应答网络请求，使主机间或者一台计算机上的进程间可以通讯。</p><p>使用 <strong><code>socket（）</code></strong> 函数来 <strong>创建 套接字</strong></p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">socket</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">socket</span><span style="color:#89DDFF;">([</span><span style="color:#82AAFF;">family</span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;">type</span><span style="color:#89DDFF;">[,</span><span style="color:#82AAFF;">proto</span><span style="color:#89DDFF;">]]])</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><code>family</code> ：套接字家族可以使 <strong>AF_UNIX</strong> 或者 <strong>AF_INET</strong> .</li><li><code>type</code> ：套接字类型可以根据是面向 <strong>连接</strong> 的还是 <strong>非连接</strong> 分为 <strong>SOCK_STREAM</strong> 或 <strong>SOCK_DGRAM</strong> .</li><li><code>protocol</code> ：一般不填默认为 <strong>0</strong> 。</li></ul><h3 id="_3-socket-服务端" tabindex="-1">3. Socket 服务端 <a class="header-anchor" href="#_3-socket-服务端" aria-label="Permalink to &quot;3. Socket 服务端&quot;">​</a></h3><ul><li>使用 <strong>socket 模块</strong> 的 <strong>socket 函数</strong> 来创建一个 <code>socket 对象</code>。socket 对象可以通过调用其他函数来设置一个 socket 服务。</li><li>可以通过调用 <code>bind（hostname，port）</code>函数来指定服务的 port （端口）。</li><li>调用 <strong>socket 对象</strong> 的 <code>accept 方法</code>。该方法等待客户端的连接，并返回 <strong>connection 对象</strong>，表示已连接到客户端。</li></ul><h3 id="_4-socket-客户端" tabindex="-1">4. Socket 客户端 <a class="header-anchor" href="#_4-socket-客户端" aria-label="Permalink to &quot;4. Socket 客户端&quot;">​</a></h3><ul><li><strong><code>socket.connect(hosname, port)</code></strong> 方法 打开一个 TCP 连接到主机为 hostname 端口为 port 的服务商。</li><li>连接后就可以从服务端获取数据，记住，操作完成 后需要 <strong>关闭连接</strong></li></ul><h3 id="_5-案例一-单个连接" tabindex="-1">5.案例一（单个连接） <a class="header-anchor" href="#_5-案例一-单个连接" aria-label="Permalink to &quot;5.案例一（单个连接）&quot;">​</a></h3><p><strong>服务端：</strong></p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> socket</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">ip_port </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">127.0.0.1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">9999</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 1.创建 socket 对象</span></span>
<span class="line"><span style="color:#A6ACCD;">sk </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> socket</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">socket</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 2.绑定 ip port</span></span>
<span class="line"><span style="color:#A6ACCD;">sk</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">ip_port</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 3.开启监听</span></span>
<span class="line"><span style="color:#A6ACCD;">sk</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">listen</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">---服务已经启动---</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 4.阻塞 等待连接  返回：socket连接对象（套接字）和 客户端IP</span></span>
<span class="line"><span style="color:#A6ACCD;">conn</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> addr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> sk</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">accept</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">客户端的地址 &gt;&gt;&gt; :</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> addr</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 5.接收数据---客户端数据</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># recv() 需要文件宽度作为参数，一般为 1024</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 使用 decode() 进行解码</span></span>
<span class="line"><span style="color:#A6ACCD;">receive_data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> conn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">recv</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1024</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">decode</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">接收客户端的数据 &gt;&gt;&gt; ：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> receive_data</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 6.发送数据</span></span>
<span class="line"><span style="color:#A6ACCD;">send_data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">input</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请输入 &gt;&gt;&gt; :</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># sendall() 要求是 byte 类型，使用encode() 进行字符转换</span></span>
<span class="line"><span style="color:#A6ACCD;">conn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sendall</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">send_data</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">encode</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 7.关闭 socket</span></span>
<span class="line"><span style="color:#A6ACCD;">conn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>客户端：</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> socket</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 1.创建 socket</span></span>
<span class="line"><span style="color:#A6ACCD;">sk </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> socket</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">socket</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 2.连接到服务器</span></span>
<span class="line"><span style="color:#A6ACCD;">sk</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">connect</span><span style="color:#89DDFF;">((</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">127.0.0.1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">9999</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">服务端连接成功</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 3.发送数据</span></span>
<span class="line"><span style="color:#A6ACCD;">send_data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">input</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请输入 &gt;&gt;&gt; :</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># sendall() 要求是 byte 类型，使用encode() 进行转码</span></span>
<span class="line"><span style="color:#A6ACCD;">sk</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sendall</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">send_data</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">encode</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 4.接收服务端数据</span></span>
<span class="line"><span style="color:#A6ACCD;">server_data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> sk</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">recv</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1024</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">decode</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">接收服务端的数据 &gt;&gt;&gt; ：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> server_data</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 5.关闭 socket</span></span>
<span class="line"><span style="color:#A6ACCD;">sk</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="案例二-多个连接" tabindex="-1">案例二（多个连接）： <a class="header-anchor" href="#案例二-多个连接" aria-label="Permalink to &quot;案例二（多个连接）：&quot;">​</a></h3><p>服务端：</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> socketserver</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 1.需要继承一个类</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">sqServer</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">socketserver</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">BaseRequestHandler</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">handle</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">聊天服务器上线了</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">True:</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#676E95;font-style:italic;"># 接收客户端数据</span></span>
<span class="line"><span style="color:#A6ACCD;">                self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">client_data</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">request</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">recv</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1024</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">client_data</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">decode</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#676E95;font-style:italic;"># 发送数据</span></span>
<span class="line"><span style="color:#A6ACCD;">                send_data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">input</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请输入 &gt;&gt;&gt; :</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">                self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">request</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sendall</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">send_data</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">encode</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">except</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ConnectionResetError</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> e</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">一个客户端关闭了连接</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">break</span></span>
<span class="line"><span style="color:#A6ACCD;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">request</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 2.创建服务</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># ThreadingTCPServer 是使用多线程</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># ForkingTCPServer 是使用多进程处理并发</span></span>
<span class="line"><span style="color:#A6ACCD;">server </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> socketserver</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ThreadingTCPServer</span><span style="color:#89DDFF;">((</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">127.0.0.1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">9998</span><span style="color:#89DDFF;">),</span><span style="color:#82AAFF;"> sqServer</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 3.一直在线</span></span>
<span class="line"><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">serve_forever</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>客户端：</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> socket</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 1.创建 socket</span></span>
<span class="line"><span style="color:#A6ACCD;">sk </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> socket</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">socket</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 2.连接到服务器</span></span>
<span class="line"><span style="color:#A6ACCD;">sk</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">connect</span><span style="color:#89DDFF;">((</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">127.0.0.1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">9998</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">服务端连接成功</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 3.发送数据</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">True:</span></span>
<span class="line"><span style="color:#A6ACCD;">    send_data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">老王：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">input</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请输入 &gt;&gt;&gt; :</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> send_data </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">老王：</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">exit</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">break</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># sendall() 要求是 byte 类型，使用encode() 进行转码</span></span>
<span class="line"><span style="color:#A6ACCD;">        sk</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sendall</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">send_data</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">encode</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 4.接收服务端数据</span></span>
<span class="line"><span style="color:#A6ACCD;">        server_data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> sk</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">recv</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1024</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">decode</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">接收服务端的数据 &gt;&gt;&gt; ：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> server_data</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 5.关闭 socket</span></span>
<span class="line"><span style="color:#A6ACCD;">sk</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div>`,45),e=[o];function t(c,r,F,i,D,y){return n(),a("div",null,e)}const u=s(p,[["render",t]]);export{b as __pageData,u as default};
