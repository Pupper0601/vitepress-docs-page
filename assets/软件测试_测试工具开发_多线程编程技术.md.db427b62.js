import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.1b72a0e7.js";const b=JSON.parse('{"title":"四、多线程编程技术","description":"","frontmatter":{},"headers":[],"relativePath":"软件测试/测试工具开发/多线程编程技术.md","lastUpdated":1699952033000}'),p={name:"软件测试/测试工具开发/多线程编程技术.md"},o=l(`<h1 id="四、多线程编程技术" tabindex="-1">四、多线程编程技术 <a class="header-anchor" href="#四、多线程编程技术" aria-label="Permalink to &quot;四、多线程编程技术&quot;">​</a></h1><h2 id="一、多线程的概述" tabindex="-1">一、多线程的概述 <a class="header-anchor" href="#一、多线程的概述" aria-label="Permalink to &quot;一、多线程的概述&quot;">​</a></h2><h3 id="_1-进程与线程" tabindex="-1">1. 进程与线程 <a class="header-anchor" href="#_1-进程与线程" aria-label="Permalink to &quot;1. 进程与线程&quot;">​</a></h3><ul><li><strong>进程</strong> ：在系统中正在运行的一个 <strong>应用程序</strong> ，程序一旦运行就是进程。 <ul><li><strong>进程 --- 资源分配的最小单位</strong>。</li></ul></li><li><strong>线程</strong> ： 系统分配处理时间资源的基本单元，或者说进程之内独立执行的一个单元试行流。 <ul><li><strong>线程 --- 程序执行的最小单位。</strong></li></ul></li><li><strong>进程 中最少有一个线程。</strong></li></ul><p><img src="https://img.pupper.cn/img/20220725183031.png" alt=""></p><h3 id="_2-进程的组成" tabindex="-1">2.进程的组成 <a class="header-anchor" href="#_2-进程的组成" aria-label="Permalink to &quot;2.进程的组成&quot;">​</a></h3><ul><li><p><strong>内存</strong> ： 每个进程的内存是相互独立的。</p></li><li><p><strong>文件/网络句柄</strong> ： 它们是所有的进程所共有的。</p></li><li><p><strong>线程</strong></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>所有的 <strong>线程 共享</strong> 该进程的所有资源。</p></div></li></ul><h3 id="_3-进程与线程-汇总" tabindex="-1">3. 进程与线程---汇总 <a class="header-anchor" href="#_3-进程与线程-汇总" aria-label="Permalink to &quot;3. 进程与线程---汇总&quot;">​</a></h3><ol><li>进程有分配已大部分的内存，而线程只需要分配一部分栈就可以了。</li><li>一个程序至少有一个进程，一个进程至少有一个线程。</li><li>进程是资源分配的最小单位，线程是程序执行的最小单位。</li><li>一个线程可以创建和撤销另一个线程，同一个进程中的多个线程之间可以并发执行。</li></ol><h3 id="_4-多线程" tabindex="-1">4.多线程 <a class="header-anchor" href="#_4-多线程" aria-label="Permalink to &quot;4.多线程&quot;">​</a></h3><ol><li>使用线程可以把 <strong>占据长时间</strong> 的程序中的任务放到后台去处理。</li><li>用户界面可以更加吸引人。</li><li>程序的运行速度可能加快。</li><li>在一些 <strong>等待的任务</strong> 的实现上，线程就比较有用。</li></ol><h3 id="_5-多线程的执行方式" tabindex="-1">5.多线程的执行方式 <a class="header-anchor" href="#_5-多线程的执行方式" aria-label="Permalink to &quot;5.多线程的执行方式&quot;">​</a></h3><ul><li><strong>串行</strong> ：依次执行所有的线程，上一个线程没有执行完之前，下一个线程不会执行。</li><li><strong>并行</strong> ： 所有线程同时执行。</li><li><strong>并发</strong> ： 所有线程依次 <strong>交替</strong> 执行。</li></ul><h2 id="二、threading-模块" tabindex="-1">二、Threading 模块 <a class="header-anchor" href="#二、threading-模块" aria-label="Permalink to &quot;二、Threading 模块&quot;">​</a></h2><h3 id="_1-threading-模块-常用方法" tabindex="-1">1. Threading 模块 常用方法 <a class="header-anchor" href="#_1-threading-模块-常用方法" aria-label="Permalink to &quot;1. Threading 模块 常用方法&quot;">​</a></h3><ul><li><p><strong><code>Thread（）</code></strong> ： 创建线程，<code>target</code> 为需要执行的函数，<code>args</code> 为执行函数的实参（参数为元组）</p></li><li><p><strong><code>run（）</code></strong> ： 用以表示线程活动的方法。</p></li><li><p><strong><code>start（）</code></strong> ： 启动线程活动。</p></li><li><p><strong><code>join（[time]）</code></strong> ： 等待至线程中止。这阻塞调用线程直至线程的 <code>join（）</code> 方法被调用中止 - 正常退出或者抛出未处理的异常 - 或者是可选的超时发生。</p></li><li><p><strong><code>isAlive（）</code></strong> ： 返回线程是否活动的。</p></li><li><p><strong><code>gitName（）</code></strong> ： 返回线程名。</p></li><li><p><strong><code>setName（）</code></strong> ： 设置线程名。</p></li><li><p><strong><code>threading.currentThread（）</code></strong> ： 返回当前的线程变量。</p></li><li><p><strong><code>threading.enumerate（）</code></strong> ： 返回一个包含正在运行的线程的 <code>list</code> 。<strong>正在运行</strong> 指线程启动后、结束前，<strong>不包含</strong> 启动前和终止后的线程。</p></li><li><p><strong><code>threading.activeCount（）</code></strong> ： 返回正在运行的线程数量，与 <code>len（threading.enumerate（））</code> 有相同的结果。</p></li></ul><h3 id="_2-多线程案例" tabindex="-1">2.多线程案例 <a class="header-anchor" href="#_2-多线程案例" aria-label="Permalink to &quot;2.多线程案例&quot;">​</a></h3><p>普通方法：</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> time</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">doing</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">something</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">正在做 &gt;&gt;&gt; :</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> something</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">start_time </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#82AAFF;">doing</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">在学习</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#82AAFF;">doing</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">在加班</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">end_time </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">使用时间：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> end_time</span><span style="color:#89DDFF;">-</span><span style="color:#82AAFF;">start_time</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;"># 4</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>多线程方法：</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> threading</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> time</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">doing</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">something</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">正在做 &gt;&gt;&gt; :</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> something</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">start_time </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 1.创建线程</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">target : 需要执行的函数名</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">args ： 执行函数的实参（参数为元组）一个参数时需要加 逗号“，”</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> threading</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Thread</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">target</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">doing</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">=(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">在学习</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,))</span></span>
<span class="line"><span style="color:#A6ACCD;">b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> threading</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Thread</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">target</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">doing</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">=(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">在加班</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 2.启动子线程</span></span>
<span class="line"><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 3.阻塞主线程，直到子线程全部结束</span></span>
<span class="line"><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">end_time </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">使用时间：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> end_time</span><span style="color:#89DDFF;">-</span><span style="color:#82AAFF;">start_time</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;"># 2</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="三、-多线程技术" tabindex="-1">三、 多线程技术 <a class="header-anchor" href="#三、-多线程技术" aria-label="Permalink to &quot;三、 多线程技术&quot;">​</a></h2><h3 id="_1-全局解释器锁-gil" tabindex="-1">1. 全局解释器锁（GIL） <a class="header-anchor" href="#_1-全局解释器锁-gil" aria-label="Permalink to &quot;1. 全局解释器锁（GIL）&quot;">​</a></h3><p>在 <strong>CPython</strong> 中，无论 <strong>CPU</strong> 有多少核，同时只能执行 <strong>一个线程</strong>，这是用于 <strong>GIL</strong> 的存在导致的。</p><p>可以把 <strong>GIL</strong> 看作是执行任务的 “<strong>通行证</strong>”，并且在一个 Python 进程中， <strong>GIL 只有一个</strong>。</p><h4 id="示例" tabindex="-1">示例： <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例：&quot;">​</a></h4><p>某些情况下，多个线程同时操作对一个变量时，可能会导致数据混乱，所以需要 <strong>加锁</strong> ，来防止变量依次更改 。</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> threading</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> time</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">money </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1000</span></span>
<span class="line"><span style="color:#A6ACCD;">lock </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> threading</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Lock</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">num</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">global</span><span style="color:#A6ACCD;"> money</span></span>
<span class="line"><span style="color:#A6ACCD;">    lock</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">acquire</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 加锁</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    userMoney </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> money</span></span>
<span class="line"><span style="color:#A6ACCD;">    userMoney </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> num</span></span>
<span class="line"><span style="color:#A6ACCD;">    time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    money </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> userMoney</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    lock</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">release</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 解锁</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> __name__ </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">__main__</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 创建子线程</span></span>
<span class="line"><span style="color:#A6ACCD;">    t1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> threading</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Thread</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">target</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">test</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">=(</span><span style="color:#F78C6C;">500</span><span style="color:#89DDFF;">,))</span></span>
<span class="line"><span style="color:#A6ACCD;">    t2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> threading</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Thread</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">target</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">test</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">=(-</span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">,))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 启动子线程</span></span>
<span class="line"><span style="color:#A6ACCD;">    t1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    t2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 阻塞</span></span>
<span class="line"><span style="color:#A6ACCD;">    t1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    t2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;余额为：</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">money</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h3 id="_2-守护进程" tabindex="-1">2.守护进程 <a class="header-anchor" href="#_2-守护进程" aria-label="Permalink to &quot;2.守护进程&quot;">​</a></h3><p>在进程想要退出进程的时候，不需要等待自己运行结束，<strong>直接退出</strong> 即可，</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">t1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setDaemon</span><span style="color:#89DDFF;">(True)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="示例-1" tabindex="-1">示例： <a class="header-anchor" href="#示例-1" aria-label="Permalink to &quot;示例：&quot;">​</a></h4><p>不论子线程是否执行结束，主线程执行完后直接结束。</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> threading</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> time</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">doing</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">something</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">正在做 &gt;&gt;&gt; :</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> something</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">something</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">结束了</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> __name__ </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">__main__</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    start_time </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> threading</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Thread</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">target</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">doing</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">=(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">在学习</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,))</span></span>
<span class="line"><span style="color:#A6ACCD;">    b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> threading</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Thread</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">target</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">doing</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">=(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">在加班</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    a</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setDaemon</span><span style="color:#89DDFF;">(True)</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;"># 守护线程</span></span>
<span class="line"><span style="color:#A6ACCD;">    b</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setDaemon</span><span style="color:#89DDFF;">(True)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 2.启动子线程</span></span>
<span class="line"><span style="color:#A6ACCD;">    a</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    b</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> one </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">range</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">主线程在运行：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> one</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    end_time </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">使用时间：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> end_time</span><span style="color:#89DDFF;">-</span><span style="color:#82AAFF;">start_time</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><ol><li>如果只有 <code>t1.start（）</code>，没有 <code>t1.join（）</code> 和 <code>t1.setDaemon(True)</code><ul><li>所有线程全部运行完成，这用会出现 主线程结束后，子线程继续运行 ， 直到结束。</li></ul></li><li>如果只有 <code>t1.start（）</code> 、<code>t1.join（）</code>，没有 <code>t1.setDaemon(True)</code> ， <ul><li>主线程结束前会等待所有的子线程运行完成，在结束。</li></ul></li><li>如果有 <code>t1.start（）</code> 、 <code>t1.setDaemon(True)</code> ，没有 <code>t1.join（）</code><ul><li>主线程完成， 所有子线程都 <strong>中断</strong>。</li></ul></li></ol></div><h3 id="_3-死锁" tabindex="-1">3. 死锁 <a class="header-anchor" href="#_3-死锁" aria-label="Permalink to &quot;3. 死锁&quot;">​</a></h3><p>在线程间 <strong>共享多个资源</strong> 的时候，如果两个线程分别占有一部分资源并且 <strong>同时等待</strong> 对方的资源，就会造成 <strong>死锁</strong>。</p><h4 id="示例-2" tabindex="-1">示例： <a class="header-anchor" href="#示例-2" aria-label="Permalink to &quot;示例：&quot;">​</a></h4><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> threading</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> time</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">lockA </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> threading</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Lock</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">lockB </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> threading</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Lock</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 面试官</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fool</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    lockA</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">acquire</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">     </span><span style="color:#676E95;font-style:italic;"># 上锁</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请解释什么是死锁</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    lockB</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">acquire</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">     </span><span style="color:#676E95;font-style:italic;"># 上锁</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">发 offer</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    lockA</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">release</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">     </span><span style="color:#676E95;font-style:italic;"># 解锁</span></span>
<span class="line"><span style="color:#A6ACCD;">    lockB</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">release</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 面试者</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">user</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    lockB</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">acquire</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请给我发 offer</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    lockA</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">acquire</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">解释了什么是死锁</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    lockA</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">release</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    lockB</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">release</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">t1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> threading</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Thread</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">target</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">fool</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">t2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> threading</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Thread</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">target</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">user</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">t1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">t2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h3 id="_4-递归锁" tabindex="-1">4.递归锁 <a class="header-anchor" href="#_4-递归锁" aria-label="Permalink to &quot;4.递归锁&quot;">​</a></h3><p>为了支持在同一线程中多次请求同一资源， Python 提供了 “<strong>可重入锁</strong>” ： <code>threading.RLock</code> 。</p><p><strong>RLock</strong> 内部维护着一个 <strong><code>Lock</code></strong> 和一个 **<code>counter</code>**<strong>变量</strong> ， <strong>counter</strong> 记录了 <strong>acquire 的次数</strong> ， 从而使得资源可以被多次 **acquire** 。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>递归锁内部维护着一把 <strong>锁</strong> 和一个 <strong>计数器</strong></p><p>每次 <strong>上锁</strong>，计数器 <strong>加</strong> ，每次 <strong>解锁</strong> ，计数器 <strong>减</strong></p><p>计数器可以大于零也可以等于零，但不能 <strong>小于零</strong></p></div><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> threading</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> time</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">lockR </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> threading</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">RLock</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fool</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    lockR</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">acquire</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请解释什么是死锁</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    lockR</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">acquire</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">发 offer</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    lockR</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">release</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    lockR</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">release</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">user</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    lockR</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">acquire</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请给我发 offer</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    lockR</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">acquire</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">解释了什么是死锁</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    lockR</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">release</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    lockR</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">release</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">t1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> threading</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Thread</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">target</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">fool</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">t2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> threading</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Thread</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">target</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">user</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">t1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">t2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div>`,44),e=[o];function r(t,c,F,i,D,y){return n(),a("div",null,e)}const C=s(p,[["render",r]]);export{b as __pageData,C as default};
